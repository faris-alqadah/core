function xReturn = get_genes_by_ko_class(obj,class_id,org,offset,limit)
%get_genes_by_ko_class(obj,class_id,org,offset,limit)
%
%     Input:
%       class_id = (string)
%       org = (string)
%       offset = (int)
%       limit = (int)
%   
%     Output:
%       return{:} = (Definition)

% Build up the argument lists.
values = { ...
   class_id, ...
   org, ...
   offset, ...
   limit, ...
   };
names = { ...
   'class_id', ...
   'org', ...
   'offset', ...
   'limit', ...
   };
types = { ...
   '{http://www.w3.org/2001/XMLSchema}string', ...
   '{http://www.w3.org/2001/XMLSchema}string', ...
   '{http://www.w3.org/2001/XMLSchema}int', ...
   '{http://www.w3.org/2001/XMLSchema}int', ...
   };

% Create the message, make the call, and convert the response into a variable.
soapMessage = createSoapMessage( ...
    'SOAP/KEGG', ...
    'get_genes_by_ko_class', ...
    values,names,types,'rpc');
response = callSoapService( ...
    obj.endpoint, ...
    'SOAP/KEGG#get_genes_by_ko_class', ...
    soapMessage);
xReturn = parseSoapResponse(response);
